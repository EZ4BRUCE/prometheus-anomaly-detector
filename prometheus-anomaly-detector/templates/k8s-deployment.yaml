---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-anomaly-detector
spec:
  selector:
    matchLabels:
      app: prometheus-anomaly-detector
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus-anomaly-detector
    spec:
      containers:
        - name: prometheus-anomaly-detector
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: FLT_PROM_URL
              value: "{{ .Values.prometheus.url }}"
            - name: FLT_PROM_ACCESS_TOKEN
              value: "{{ .Values.prometheus.prometheusAccessToken }}"
            - name: FLT_METRICS_LIST
              value: {{ include "formatMetricsList" . }}
            - name: FLT_RETRAINING_INTERVAL_MINUTES
              value: "{{ .Values.prometheus.retrainingIntervalMinutes }}"
            - name: FLT_ROLLING_TRAINING_WINDOW_SIZE
              value: "{{ .Values.prometheus.rollingTrainingWindowSize }}"
            - name: FLT_DEBUG_MODE
              value: "True"
            - name: APP_FILE
              value: "app.py"
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
